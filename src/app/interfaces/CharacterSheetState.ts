import React from "react"

export interface CharacterSheetState {
    componentReference: React.MutableRefObject<null>
    data: {
        characterName: string,
        characterClassAndLevel: string,
        characterBackground: string,
        characterPlayerName: string,
        characterRace: string,
        characterAlignment: string,
        characterExperiencePoints: string,
        characterStrength: string,
        characterStrengthmod: string,
        characterDexterity: string,
        characterDexteritymod: string,
        characterConstitution: string,
        characterConstitutionmod: string,
        characterWisdom: string,
        characterWisdommod: string,
        characterIntelligence: string,
        characterIntelligencemod: string,
        characterCharisma: string,
        characterCharismamod: string,
        characterProficiencyBonus: string,
        characterStrengthSave: string,
        StrengthSaveProf: boolean,
        characterDexteritySave: string,
        DexteritySaveProf: boolean,
        characterConstitutionSave: string,
        ConstitutionSaveProf: boolean,
        characterWisdomSave: string,
        WisdomSaveProf: boolean,
        characterIntelligenceSave: string,
        IntelligenceSaveProf: boolean,
        characterCharismaSave: string,
        CharismaSaveProf: boolean,
        characterAcrobaticsSave: string,
        AcrobaticsSaveProf: boolean,
        characterAnimalHandlingSave: string,
        AnimalHandlingSaveProf: boolean,
        characterArcanaSave: string,
        ArcanaSaveProf: boolean,
        characterAthleticsSave: string,
        AthleticsSaveProf: boolean,
        characterDeceptionSave: string,
        DeceptionSaveProf: boolean,
        characterHistorySave: string,
        HistorySaveProf: boolean,
        characterInsightSave: string,
        InsightSaveProf: boolean,
        characterIntimidationSave: string,
        IntimidationSaveProf: boolean,
        characterInvestigationSave: string,
        InvestigationSaveProf: boolean,
        characterMedicineSave: string,
        MedicineSaveProf: boolean,
        characterNatureSave: string,
        NatureSaveProf: boolean,
        characterPerceptionSave: string,
        PerceptionSaveProf: boolean,
        characterPerformanceSave: string,
        PerformanceSaveProf: boolean,
        characterPersuasionSave: string,
        PersuasionSaveProf: boolean,
        characterReligionSave: string,
        ReligionSaveProf: boolean,
        characterSleightofHandSave: string,
        SleightofHandSaveProf: boolean,
        characterStealthSave: string,
        StealthSaveProf: boolean,
        characterSurvivalSave: string,
        SurvivalSaveProf: boolean,
        characterPassivePerception: string,
        characterOtherprofs: string,
        characterArmorClass: string,
        characterInitiative: string,
        characterSpeed: string,
        characterMaxHP: string,
        characterCurrentHP: string,
        characterTempHP: string,
        characterTotalHD: string,
        characterRemainingHD: string,
        characterdeathSuccess1: boolean,
        characterdeathSuccess2: boolean,
        characterdeathSuccess3: boolean,
        characterDeathFail1: boolean,
        characterDeathFail2: boolean,
        characterDeathFail3: boolean,
        characterAtkName1: string,
        characterAtkbonus1: string,
        characterAtkDamage1: string,
        characterAtkName2: string,
        characterAtkbonus2: string,
        characterAtkDamage2: string,
        characterAtkName3: string,
        characterAtkbonus3: string,
        characterAtkDamage3: string,
        characterCP: string,
        characterSP: string,
        characterEP: string,
        characterGP: string,
        characterPP: string,
        attacksAndSpellCasting: string,
        characterEquipment: string,
        characterPersonality: string,
        characterIdeals: string,
        characterBonds: string,
        characterFlaws: string,
        characterFeatures: string,
        characterBio: string,
    }
    dispatch: {
        characterNameSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        characterClassAndLevelSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        characterBackgroundlSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        characterPlayerNameSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        characterRaceSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        characterAlignmentSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        characterExperiencePointsSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        characterStrengthSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        characterDexteritySet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        characterConstitutionSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        characterWisdomSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        characterIntelligenceSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        characterCharismaSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        characterProficiencyBonusSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        characterStrengthSaveSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        StrengthSaveProfSet: () => void,
        characterDexteritySaveSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        DexteritySaveProfSet: () => void,
        characterConstitutionSaveSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        ConstitutionSaveProfSet: () => void,
        characterWisdomSaveSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        WisdomSaveProfSet: () => void,
        characterIntelligenceSaveSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        IntelligenceSaveProfSet: () => void,
        characterCharismaSaveSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        CharismaSaveProfSet: () => void,
        characterAcrobaticsSaveSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        AcrobaticsSaveProfSet: () => void,
        characterAnimalHandlingSaveSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        AnimalHandlingSaveProfSet: () => void,
        characterArcanaSaveSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        ArcanaSaveProfSet: () => void,
        characterAthleticsSaveSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        AthleticsSaveProfSet: () => void,
        characterDeceptionSaveSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        DeceptionSaveProfSet: () => void,
        characterHistorySaveSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        HistorySaveProfSet: () => void,
        characterInsightSaveSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        InsightSaveProfSet: () => void,
        characterIntimidationSaveSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        IntimidationSaveProfSet: () => void,
        characterInvestigationSaveSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        InvestigationSaveProfSet: () => void,
        characterMedicineSaveSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        MedicineSaveProfSet: () => void,
        characterNatureSaveSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        NatureSaveProfSet: () => void,
        characterPerceptionSaveSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        PerceptionSaveProfSet: () => void,
        characterPerformanceSaveSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        PerformanceSaveProfSet: () => void,
        characterPersuasionSaveSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        PersuasionSaveProfSet: () => void,
        characterReligionSaveSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        ReligionSaveProfSet: () => void,
        characterSleightofHandSaveSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        SleightofHandSaveProfSet: () => void,
        characterStealthSaveSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        StealthSaveProfSet: () => void,
        characterSurvivalSaveSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        SurvivalSaveProfSet: () => void,
        characterPassivePerceptionSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        characterOtherprofsSet: (event: React.ChangeEvent<HTMLTextAreaElement>) => void,
        characterArmorClassSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        characterInitiativeSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        characterSpeedSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        characterMaxHPSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        characterCurrentHPSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        characterTempHPSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        characterTotalHDSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        characterRemainingHDSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        characterdeathSuccess1Set: () => void,
        characterdeathSuccess2Set: () => void,
        characterdeathSuccess3Set: () => void,
        characterDeathFail1Set: () => void,
        characterDeathFail2Set: () => void,
        characterDeathFail3Set: () => void,
        characterAtkName1Set: (event: React.ChangeEvent<HTMLInputElement>) => void,
        characterAtkbonus1Set: (event: React.ChangeEvent<HTMLInputElement>) => void,
        characterAtkDamage1Set: (event: React.ChangeEvent<HTMLInputElement>) => void,
        characterAtkName2Set: (event: React.ChangeEvent<HTMLInputElement>) => void,
        characterAtkbonus2Set: (event: React.ChangeEvent<HTMLInputElement>) => void,
        characterAtkDamage2Set: (event: React.ChangeEvent<HTMLInputElement>) => void,
        characterAtkName3Set: (event: React.ChangeEvent<HTMLInputElement>) => void,
        characterAtkbonus3Set: (event: React.ChangeEvent<HTMLInputElement>) => void,
        characterAtkDamage3Set: (event: React.ChangeEvent<HTMLInputElement>) => void,
        characterCPSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        characterSPSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        characterEPSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        characterGPSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        characterPPSet: (event: React.ChangeEvent<HTMLInputElement>) => void,
        attacksAndSpellCastingSet: (event: React.ChangeEvent<HTMLTextAreaElement>) => void,
        characterEquipmentSet: (event: React.ChangeEvent<HTMLTextAreaElement>) => void,
        characterPersonalitySet: (event: React.ChangeEvent<HTMLTextAreaElement>) => void,
        characterIdealsSet: (event: React.ChangeEvent<HTMLTextAreaElement>) => void,
        characterBondsSet: (event: React.ChangeEvent<HTMLTextAreaElement>) => void,
        characterFlawsSet: (event: React.ChangeEvent<HTMLTextAreaElement>) => void,
        characterFeaturesSet: (event: React.ChangeEvent<HTMLTextAreaElement>) => void,
        characterBioSet: (event: React.ChangeEvent<HTMLTextAreaElement>) => void,
    }
}